<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="img_house.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>